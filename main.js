!function(t){var e={};function s(a){if(e[a])return e[a].exports;var i=e[a]={i:a,l:!1,exports:{}};return t[a].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=t,s.c=e,s.d=function(t,e,a){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:a})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(s.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)s.d(a,i,function(e){return t[e]}.bind(null,i));return a},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=1)}([function(t,e,s){},function(t,e,s){"use strict";s.r(e);s(0);function a(t,e){const s={X:null,Y:null};for(let a=0;a<e.length;a+=1)if(s.Y=e[a].indexOf(t),-1!==s.Y){s.X=a;break}return s}function i(t,e){let s;return t.character.level>e.character.level&&(s=-1),t.character.level===e.character.level&&(s=0),t.character.level<e.character.level&&(s=1),s}function n(t,e){let s;return t.distance>e.distance&&(s=1),t.distance===e.distance&&(s=0),t.distance<e.distance&&(s=-1),s}class r{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t}drawUi(t){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n      <div class="score-container">\n        <div data-id="total-score" class="score">Максимальный результат: <span>0</span></div>\n        <div data-id="score" class="score">Текущий счет: <span>0</span></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",t=>this.onNewGameClick(t)),this.saveGameEl.addEventListener("click",t=>this.onSaveGameClick(t)),this.loadGameEl.addEventListener("click",t=>this.onLoadGameClick(t)),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(t);for(let t=0;t<this.boardSize**2;t+=1){const a=document.createElement("div");a.classList.add("cell","map-tile","map-tile-"+(e=t,s=this.boardSize,0===e?"top-left":e===s-1?"top-right":e===s**2-s?"bottom-left":e===s**2-1?"bottom-right":e<s?"top":Number.isInteger(e/s)?"left":Number.isInteger((e+1)/s)?"right":e>s**2-s?"bottom":"center")),a.addEventListener("mouseenter",t=>this.onCellEnter(t)),a.addEventListener("mouseleave",t=>this.onCellLeave(t)),a.addEventListener("click",t=>this.onCellClick(t)),this.boardEl.appendChild(a)}var e,s;this.cells=Array.from(this.boardEl.children)}static showScore(t,e){const s=document.querySelector(".score-container").querySelectorAll("span");s[0].textContent=t,s[1].textContent=e}redrawPositions(t){for(const t of this.cells)t.innerHTML="";for(const s of t){const t=this.boardEl.children[s.position],a=document.createElement("div");a.classList.add("character",s.character.type);const i=document.createElement("div");i.classList.add("health-level");const n=document.createElement("div");n.classList.add("health-level-indicator","health-level-indicator-"+((e=s.character.health)<15?"critical":e<50?"normal":"high")),n.style.width=s.character.health+"%",i.appendChild(n),a.appendChild(i),t.appendChild(a)}var e}addCellEnterListener(t){this.cellEnterListeners.push(t)}addCellLeaveListener(t){this.cellLeaveListeners.push(t)}addCellClickListener(t){this.cellClickListeners.push(t)}addNewGameListener(t){this.newGameListeners.push(t)}addSaveGameListener(t){this.saveGameListeners.push(t)}addLoadGameListener(t){this.loadGameListeners.push(t)}onCellEnter(t){t.preventDefault();const e=this.cells.indexOf(t.currentTarget);this.cellEnterListeners.forEach(t=>t.call(null,e))}onCellLeave(t){t.preventDefault();const e=this.cells.indexOf(t.currentTarget);this.cellLeaveListeners.forEach(t=>t.call(null,e))}onCellClick(t){const e=this.cells.indexOf(t.currentTarget);this.cellClickListeners.forEach(t=>t.call(null,e))}onNewGameClick(t){t.preventDefault(),this.newGameListeners.forEach(t=>t.call(null))}onSaveGameClick(t){t.preventDefault(),this.saveGameListeners.forEach(t=>t.call(null))}onLoadGameClick(t){t.preventDefault(),this.loadGameListeners.forEach(t=>t.call(null))}static showError(t){alert(t)}static showMessage(t){alert(t)}selectCell(t,e="yellow"){this.deselectCell(t),this.cells[t].classList.add("selected","selected-"+e)}deselectCell(t){const e=this.cells[t];e.classList.remove(...Array.from(e.classList).filter(t=>t.startsWith("selected")))}showCellTooltip(t,e){this.cells[e].title=t}hideCellTooltip(t){this.cells[t].title=""}showDamage(t,e){return new Promise(s=>{const a=this.cells[t],i=document.createElement("span");i.textContent=e,i.classList.add("damage"),a.appendChild(i),i.addEventListener("animationend",()=>{a.removeChild(i),s()})})}setCursor(t){this.boardEl.style.cursor=t}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}}class l{constructor(t,e="generic"){if(this.level=t,this.attack=0,this.defence=0,this.health=50,this.type=e,new.target===l.prototype.constructor)throw new Error("Нельзя использовать вызов new Character()")}static levelUp(t=null){this.level+=t;let e=Math.max(this.attack,this.attack*(80+this.health)/100);e=Math.round(e),this.attack=e;let s=Math.max(this.defence,this.defence*(80+this.health)/100);s=Math.round(s),this.defence=s,this.health+=80,this.health>100&&(this.health=100)}}class o extends l{constructor(...t){if(super(...t,"bowman"),this.attack=25,this.defence=25,this.step=2,this.stepAttack=2,this.level>1)for(let t=1;t<this.level;t+=1)l.levelUp.call(this)}}class h extends l{constructor(...t){if(super(...t,"swordsman"),this.attack=40,this.defence=10,this.step=4,this.stepAttack=1,this.level>1)for(let t=1;t<this.level;t+=1)l.levelUp.call(this)}}class c extends l{constructor(...t){if(super(...t,"magician"),this.attack=10,this.defence=40,this.step=1,this.stepAttack=4,this.level>1)for(let t=1;t<this.level;t+=1)l.levelUp.call(this)}}class m{constructor(t){this.characters=t}}function d(t,e,s){const a=function*(t,e){for(;;){const s=Math.floor(Math.random()*e)+1,a=new(t[Math.floor(Math.random()*t.length)])(s);yield a}}(t,e),i=[];for(let t=0;t<s;t+=1)i.push(a.next().value);return new m(i)}class g extends l{constructor(...t){if(super(...t,"daemon"),this.attack=10,this.defence=40,this.step=1,this.stepAttack=4,this.level>1)for(let t=1;t<this.level;t+=1)l.levelUp.call(this)}}class p extends l{constructor(...t){if(super(...t,"undead"),this.attack=40,this.defence=10,this.step=4,this.stepAttack=1,this.level>1)for(let t=1;t<this.level;t+=1)l.levelUp.call(this)}}class u extends l{constructor(...t){if(super(...t,"vampire"),this.attack=25,this.defence=25,this.step=2,this.stepAttack=2,this.level>1)for(let t=1;t<this.level;t+=1)l.levelUp.call(this)}}class S{constructor(t,e){if("number"!=typeof e)throw new Error("position must be a number");this.character=t,this.position=e}}class y{constructor(){this.stepUser=!0,this.lostIndex=-1,this.players=[],this.enemies=[],this.playerTypes=[],this.enemyTypes=[],this.unitAssign=!1,this.point={X:null,Y:null},this.matrix=void 0,this.cursorStatus=!0,this.step=void 0,this.stepAttack=void 0,this.animation=!1,this.playerVictory=!1,this.countMembers=4,this.level=1,this.countThemes=0,this.newGame=!1,this.score=0,this.maxScore=0,this.addListener=!0,this.firstRun=!0}from(t){return this.stepUser=t.stepUser,this.lostIndex=t.lostIndex,this.players=t.players,this.enemies=t.enemies,this.playerTypes=t.playerTypes,this.enemyTypes=t.enemyTypes,this.unitAssign=t.unitAssign,this.point=t.point,this.matrix=t.matrix,this.cursorStatus=t.cursorStatus,this.step=t.step,this.stepAttack=t.stepAttack,this.animation=t.animation,this.playerVictory=t.playerVictory,this.countMembers=t.countMembers,this.level=t.level,this.countThemes=t.countThemes,this.newGame=t.newGame,this.score=t.score,this.maxScore=t.maxScore,null}}var f={auto:"auto",pointer:"pointer",crosshair:"crosshair",notallowed:"not-allowed"};var v={prairie:"prairie",desert:"desert",arctic:"arctic",mountain:"mountain"};class C{constructor(t,e){this.gamePlay=t,this.stateService=e,this.gameState=new y}init(){if(this.gameState.firstRun&&(this.gameState.firstRun=!1,this.onLoadGame()))return;const{countMembers:t}=this.gameState,{level:e}=this.gameState,{countThemes:s}=this.gameState,a=Object.values(v),i=a[e-1-s*a.length];let n;this.gamePlay.drawUi(i),this.gameState.matrix=function(t){const e=[];for(let s=0;s<t;s+=1){const a=[];for(let e=0;e<t;e+=1){const i=t*s+e;a.push(i)}e.push(a)}return e}(this.gamePlay.boardSize);const l=function(t){const e={player:[],enemy:[]},s=t-1,a=t**2-s;for(let i=0;i<a;i+=1)Number.isInteger(i/t)&&(e.player.push(i),e.player.push(i+1),e.enemy.push(i+s-1),e.enemy.push(i+s));return e}(this.gamePlay.boardSize);if(this.gameState.playerVictory){const t=this.gameState.players.map(t=>t.character);n=new m(t)}else if(this.gameState.newGame){n=d([o,h,c],e,t)}else{this.gameState.addListener&&(this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),this.gamePlay.addNewGameListener(this.onNewGame.bind(this)),this.gamePlay.addSaveGameListener(this.onSaveGame.bind(this)),this.gamePlay.addLoadGameListener(this.onLoadGame.bind(this)),this.gameState.addListener=!1);n=d([o,h,c],e,t)}const S=d([g,p,u],e,t),y=C.assignPositions(n,l.player),f=C.assignPositions(S,l.enemy);this.gamePlay.redrawPositions([...y,...f]),this.gameState.players.length>0&&(this.gameState.players.length=0,this.gameState.playerTypes.length=0),this.gameState.players.push(...y),this.gameState.enemies.push(...f);const L=new Set;n.characters.forEach(t=>L.add(t.type)),this.gameState.playerTypes=Array.from(L),L.clear(),S.characters.forEach(t=>L.add(t.type)),this.gameState.enemyTypes=Array.from(L),r.showScore(this.gameState.maxScore,this.gameState.score)}onCellClick(t){if(this.gameState.animation)return;const e=[...this.gameState.players,...this.gameState.enemies],s=e.find(e=>e.position===t);if(this.gameState.cursorStatus){if(!s&&this.gameState.unitAssign){const s=e.find(t=>t.position===this.gameState.lostIndex),a=e.indexOf(s);e[a].position=t,this.gamePlay.redrawPositions(e),this.gamePlay.deselectCell(this.gameState.lostIndex),this.gamePlay.deselectCell(t),this.gameState.unitAssign=!1,this.gameState.lostIndex=-1,this.gameState.point={X:null,Y:null},this.gameState.step=void 0,this.gameState.stepAttack=void 0,this.gameState.stepUser?this.gameState.stepUser=!1:this.gameState.stepUser=!0,this.gamePlay.setCursor(f.auto),this.gameState.stepUser||this.stepComputer()}if(s){const i={};this.gameState.stepUser?(i.type=this.gameState.playerTypes,i.enemy=this.gameState.enemies):(i.type=this.gameState.enemyTypes,i.enemy=this.gameState.players);const n=i.type.includes(s.character.type);if(this.gameState.unitAssign&&!n)return void this.attackOnUnit(e,t,i);n?(this.gameState.lostIndex>-1&&this.gamePlay.deselectCell(this.gameState.lostIndex),this.gamePlay.selectCell(t),this.gameState.lostIndex=t,this.gameState.unitAssign=!0,this.gameState.point=a(t,this.gameState.matrix),this.gameState.step=s.character.step,this.gameState.stepAttack=s.character.stepAttack,this.gamePlay.setCursor(f.pointer)):r.showError("Нельзя выбирать игроков противника")}}else r.showError("Недопустимое действие")}onCellEnter(t){let e;e=this.gameState.stepUser?this.gameState.enemyTypes:this.gameState.playerTypes;const s=[...this.gameState.players,...this.gameState.enemies].find(e=>e.position===t);if(s){const e=C.getMessage(s);this.gamePlay.showCellTooltip(e,t)}if(this.gameState.unitAssign){this.gameState.cursorStatus=!0,this.gamePlay.setCursor(f.pointer);const i=a(t,this.gameState.matrix),n=Math.abs(i.X-this.gameState.point.X),r=Math.abs(i.Y-this.gameState.point.Y),{step:l}=this.gameState;if(s){const{stepAttack:a}=this.gameState;e.includes(s.character.type)&&(n>a||r>a?(this.gamePlay.setCursor(f.notallowed),this.gameState.cursorStatus=!1):(this.gamePlay.setCursor(f.crosshair),this.gamePlay.selectCell(t,"red")))}else n<=l&&this.gameState.point.Y===i.Y||r<=l&&this.gameState.point.X===i.X||n<=l&&n===r?this.gamePlay.selectCell(t,"green"):(this.gamePlay.setCursor(f.notallowed),this.gameState.cursorStatus=!1)}}onCellLeave(t){this.gamePlay.hideCellTooltip(t),this.gamePlay.setCursor(f.auto);const e=[...this.gameState.players,...this.gameState.enemies].find(e=>e.position===t);if(this.gameState.unitAssign){if(e&&t===this.gameState.lostIndex)return;this.gamePlay.deselectCell(t)}}reloadScore(){let t;try{t=this.stateService.load()}catch(t){r.showError(t.message)}t&&this.gameState.maxScore>t.maxScore&&(t.maxScore=this.gameState.maxScore,this.stateService.save(t))}onNewGame(){this.reloadScore();const{score:t,maxScore:e}=this.gameState;this.gameState=new y,this.gameState.maxScore=t>e?t:e,this.gameState.newGame=!0,this.gameState.firstRun=!1,this.gameState.addListener=!1,this.init()}onSaveGame(){this.stateService.save(this.gameState)}onLoadGame(){let t;try{t=this.stateService.load()}catch(t){return r.showError(t),!1}if(!t)return!1;this.gameState.from(t);const{level:e}=this.gameState,{countThemes:s}=this.gameState,a=Object.values(v),i=a[e-1-s*a.length];this.gamePlay.drawUi(i);const{players:n}=this.gameState,{enemies:l}=this.gameState;return this.gamePlay.redrawPositions([...n,...l]),this.gameState.addListener&&(this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),this.gamePlay.addNewGameListener(this.onNewGame.bind(this)),this.gamePlay.addSaveGameListener(this.onSaveGame.bind(this)),this.gamePlay.addLoadGameListener(this.onLoadGame.bind(this)),this.gameState.addListener=!1),r.showScore(this.gameState.maxScore,this.gameState.score),!0}static assignPositions(t,e){const s=[];for(let a=0;a<t.characters.length;a+=1){const i=t.characters[a],n=Math.floor(Math.random()*e.length),r=e[n];e.splice(n,1);const l=new S(i,r);s.push(l)}return s}static getMessage(t){const{level:e}=t.character,{attack:s}=t.character,{defence:a}=t.character,{health:i}=t.character;return`🎖 ${e} ⚔ ${s} 🛡 ${a} ❤ ${i}`}attackOnUnit(t,e,s){let a=t.find(t=>t.position===this.gameState.lostIndex);a=a.character;let i=t.find(t=>t.position===e);const n=t.indexOf(i);i=i.character;let l=Math.max(a.attack-i.defence,.1*a.attack);l=Number(l.toFixed(1));const o=this.gamePlay.showDamage(e,l);this.gameState.animation=!0;const{health:h}=t[n].character;[...t][n].character.health=Number((h-l).toFixed(1));const{lostIndex:c}=this.gameState;o.then(()=>{if(this.gamePlay.redrawPositions(t),this.gameState.animation=!1,t[n].character.health<=0){t.splice(n,1),this.gamePlay.redrawPositions(t);const a=s.enemy.find(t=>t.position===e),i=s.enemy.indexOf(a);this.gameState.stepUser?(this.gameState.score+=100*a.character.level,this.gameState.enemies.splice(i,1),this.gameState.score>this.gameState.maxScore&&(this.gameState.maxScore=this.gameState.score),r.showScore(this.gameState.maxScore,this.gameState.score)):this.gameState.players.splice(i,1)}this.gameState.stepUser?this.gameState.stepUser=!1:this.gameState.stepUser=!0,this.gameState.stepUser||this.stepComputer()}),this.gameState.lostIndex=-1,this.gameState.unitAssign=!1,this.gameState.point={X:null,Y:null},this.gameState.step=void 0,this.gameState.stepAttack=void 0,this.gamePlay.setCursor(f.auto),this.gamePlay.deselectCell(c),this.gamePlay.deselectCell(e)}stepComputer(){if(0===this.gameState.enemies.length){this.gameState.stepUser=!0,this.upgradeUnits(),this.gameState.playerVictory=!0;let{level:t}=this.gameState;const e=Object.values(v);return this.gameState.level+=1,t+=1,Number.isInteger((t-1)/e.length)&&(this.gameState.countThemes+=1),void this.init()}const t=this.inviteUnit(),e=a(t.position,this.gameState.matrix);this.onCellClick(t.position);const s=this.countDistance(e),i=a(s.position,this.gameState.matrix);if(s.distance<=0)return void this.onCellClick(this.gameState.matrix[i.X][i.Y]);const n=function(t,e){let s;return t.distance,e.character.stepAttack,s=t.distance,t.distance>e.character.step&&(s=e.character.step),s}(s,t),{x:r,y:l}=this.getCordsMove(e,i,n);this.onCellClick(this.gameState.matrix[r][l])}upgradeUnits(){for(let t=0;t<this.gameState.players.length;t+=1){const e=this.gameState.players[t];l.levelUp.call(e.character,1)}this.gamePlay.redrawPositions(this.gameState.players)}inviteUnit(){const t={1:"undead",2:"vampire",3:"daemon"};let e;const{enemies:s}=this.gameState;for(const a in t)if(Object.prototype.hasOwnProperty.call(t,a)&&(e=s.filter(e=>e.character.type===t[a]),e.length>0))break;return e.sort(i),e[0]}countDistance(t){const e=this.gameState.players,s=[];return e.forEach(e=>{const i=a(e.position,this.gameState.matrix),n=Math.abs(t.X-i.X),r=Math.abs(t.Y-i.Y);let l;l=n<=this.gameState.stepAttack?r-this.gameState.stepAttack:r<=this.gameState.stepAttack?n-this.gameState.stepAttack:n-this.gameState.stepAttack+r-this.gameState.stepAttack,s.push({distance:l,position:e.position})}),s.sort(n),s[0]}getCordsMove(t,e,s){const a=t.X-e.X,i=t.Y-e.Y,n=Math.abs(a),r=Math.abs(i),l=this.gameState.stepAttack;let o,h;return n-l<=0?(o=t.X,h=t.Y>e.Y?t.Y-s:t.Y+s):r-l<=0?(h=t.Y,o=t.X>e.X?t.X-s:t.X+s):n-l>=s&&r-l>=s?(o=a>0?t.X-s:t.X+s,h=i>0?t.Y-s:t.Y+s):n-l>=r-l?(h=t.Y,o=t.X>e.X?t.X-s:t.X+s):(o=t.X,h=t.Y>e.Y?t.Y-s:t.Y+s),o=o<0?0:o,h=h<0?0:h,{x:o,y:h}}}const L=new r;L.bindToDOM(document.querySelector("#game-container"));const b=new class{constructor(t){this.storage=t}save(t){this.storage.setItem("state",JSON.stringify(t))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(t){throw new Error("Invalid state")}}}(localStorage);new C(L,b).init()}]);